# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build mixin-python

on:
  push:
    branches:
      - "*"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # python-version: [3.7, 3.8, 3.9]
        # os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
        python-version: [3.9]
        os: ['windows-latest']
      fail-fast: false

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.16.x'
      # - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest scikit-build cython
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build libmixin.a
        working-directory: src/mixin
        run: |
          go build -o libmixin.a -buildmode=c-archive
      - name: Build mixin-python
        run: |
          python setup.py sdist bdist_wheel
      - name: get whl file
        id: whlfile
        run: |
          echo "::set-output name=value::$(python scripts/get_whl_file.py)"
      - name: Install mixin-python
        run: |
          python -m pip uninstall mixin-python -y;python -m pip install ./dist/${{ steps.whlfile.outputs.value }}
      - name: Test
        run: |
          python3 -m mixin.main
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./dist/${{ steps.whlfile.outputs.value }}
